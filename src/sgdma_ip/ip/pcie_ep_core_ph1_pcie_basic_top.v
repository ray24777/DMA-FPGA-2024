
/************************************************************\
 **  Copyright (c) 2012-2024 Anlogic Inc.
 **  All Right Reserved.\
\************************************************************/
/************************************************************\
 ** Log	:	This file is generated by Anlogic IP Generator.
 ** File	:	D:/my_project/O__Verimake__DEMO__PH1A90/sgdma/src/sgdma_ip/ip/pcie_ep_core_ph1_pcie_basic_top.v
 ** Date	:	2024 09 12
 ** TD version	:	6.0.122666
\************************************************************/
module pcie_ep_core_ph1_pcie_basic_top (
    input wire [127:0] client0_tlp_data_user, 
    input wire [63:0] client0_tlp_addr_user, 
    input wire [15:0] client0_remote_req_id_user, 
    input wire [7:0] client0_tlp_byte_en_user, 
    input wire [11:0] client0_cpl_byte_cnt_user, 
    input wire client0_addr_align_en_user, 
    input wire [2:0] client0_tlp_tc_user, 
    input wire [2:0] client0_tlp_attr_user, 
    input wire [2:0] client0_cpl_status_user, 
    input wire client0_cpl_bcm_user, 
    input wire client0_tlp_dv_user, 
    input wire client0_tlp_eot_user, 
    input wire client0_tlp_bad_eot_user, 
    input wire client0_tlp_hv_user, 
    input wire [4:0] client0_tlp_type_user, 
    input wire [1:0] client0_tlp_fmt_user, 
    input wire client0_tlp_td_user, 
    input wire [12:0] client0_tlp_byte_len_user, 
    input wire [9:0] client0_tlp_tid_user, 
    input wire client0_tlp_ep_user, 
    input wire client0_tlp_func_num_user, 
    input wire [1:0] client0_tlp_vfunc_num_user, 
    input wire [1:0] client0_tlp_ats_user, 
    input wire [7:0] client0_tlp_st_user, 
    input wire client0_tlp_vfunc_active_user, 
    input wire client0_tlp_nw_user, 
    input wire client0_tlp_th_user, 
    input wire [1:0] client0_tlp_ph_user, 
    input wire client0_tlp_atu_bypass_user, 
    input wire [9:0] client0_cpl_lookup_id_user, 
    output wire xadm_client0_halt_user, 
    output wire [127:0] client0_tlp_data_core, 
    output wire [63:0] client0_tlp_addr_core, 
    output wire [15:0] client0_remote_req_id_core, 
    output wire [7:0] client0_tlp_byte_en_core, 
    output wire [11:0] client0_cpl_byte_cnt_core, 
    output wire client0_addr_align_en_core, 
    output wire [2:0] client0_tlp_tc_core, 
    output wire [2:0] client0_tlp_attr_core, 
    output wire [2:0] client0_cpl_status_core, 
    output wire client0_cpl_bcm_core, 
    output wire client0_tlp_dv_core, 
    output wire client0_tlp_eot_core, 
    output wire client0_tlp_bad_eot_core, 
    output wire client0_tlp_hv_core, 
    output wire [4:0] client0_tlp_type_core, 
    output wire [1:0] client0_tlp_fmt_core, 
    output wire client0_tlp_td_core, 
    output wire [12:0] client0_tlp_byte_len_core, 
    output wire [9:0] client0_tlp_tid_core, 
    output wire client0_tlp_ep_core, 
    output wire client0_tlp_func_num_core, 
    output wire [1:0] client0_tlp_vfunc_num_core, 
    output wire [1:0] client0_tlp_ats_core, 
    output wire [7:0] client0_tlp_st_core, 
    output wire client0_tlp_vfunc_active_core, 
    output wire client0_tlp_nw_core, 
    output wire client0_tlp_th_core, 
    output wire [1:0] client0_tlp_ph_core, 
    output wire client0_tlp_atu_bypass_core, 
    output wire [9:0] client0_cpl_lookup_id_core, 
    input wire xadm_client0_halt_core, 
    input wire [127:0] client1_tlp_data_user, 
    input wire [63:0] client1_tlp_addr_user, 
    input wire [15:0] client1_remote_req_id_user, 
    input wire [7:0] client1_tlp_byte_en_user, 
    input wire [11:0] client1_cpl_byte_cnt_user, 
    input wire client1_addr_align_en_user, 
    input wire [2:0] client1_tlp_tc_user, 
    input wire [2:0] client1_tlp_attr_user, 
    input wire [2:0] client1_cpl_status_user, 
    input wire client1_cpl_bcm_user, 
    input wire client1_tlp_dv_user, 
    input wire client1_tlp_eot_user, 
    input wire client1_tlp_bad_eot_user, 
    input wire client1_tlp_hv_user, 
    input wire [4:0] client1_tlp_type_user, 
    input wire [1:0] client1_tlp_fmt_user, 
    input wire client1_tlp_td_user, 
    input wire [12:0] client1_tlp_byte_len_user, 
    input wire [9:0] client1_tlp_tid_user, 
    input wire client1_tlp_ep_user, 
    input wire client1_tlp_func_num_user, 
    input wire [1:0] client1_tlp_vfunc_num_user, 
    input wire [1:0] client1_tlp_ats_user, 
    input wire [7:0] client1_tlp_st_user, 
    input wire client1_tlp_vfunc_active_user, 
    input wire client1_tlp_nw_user, 
    input wire client1_tlp_th_user, 
    input wire [1:0] client1_tlp_ph_user, 
    input wire client1_tlp_atu_bypass_user, 
    input wire [9:0] client1_cpl_lookup_id_user, 
    output wire xadm_client1_halt_user, 
    output wire [127:0] client1_tlp_data_core, 
    output wire [63:0] client1_tlp_addr_core, 
    output wire [15:0] client1_remote_req_id_core, 
    output wire [7:0] client1_tlp_byte_en_core, 
    output wire [11:0] client1_cpl_byte_cnt_core, 
    output wire client1_addr_align_en_core, 
    output wire [2:0] client1_tlp_tc_core, 
    output wire [2:0] client1_tlp_attr_core, 
    output wire [2:0] client1_cpl_status_core, 
    output wire client1_cpl_bcm_core, 
    output wire client1_tlp_dv_core, 
    output wire client1_tlp_eot_core, 
    output wire client1_tlp_bad_eot_core, 
    output wire client1_tlp_hv_core, 
    output wire [4:0] client1_tlp_type_core, 
    output wire [1:0] client1_tlp_fmt_core, 
    output wire client1_tlp_td_core, 
    output wire [12:0] client1_tlp_byte_len_core, 
    output wire [9:0] client1_tlp_tid_core, 
    output wire client1_tlp_ep_core, 
    output wire client1_tlp_func_num_core, 
    output wire [1:0] client1_tlp_vfunc_num_core, 
    output wire [1:0] client1_tlp_ats_core, 
    output wire [7:0] client1_tlp_st_core, 
    output wire client1_tlp_vfunc_active_core, 
    output wire client1_tlp_nw_core, 
    output wire client1_tlp_th_core, 
    output wire [1:0] client1_tlp_ph_core, 
    output wire client1_tlp_atu_bypass_core, 
    output wire [9:0] client1_cpl_lookup_id_core, 
    input wire xadm_client1_halt_core, 
    output wire [127:0] radm_bypass_data_user, 
    output wire [3:0] radm_bypass_dwen_user, 
    output wire radm_bypass_dv_user, 
    output wire radm_bypass_hv_user, 
    output wire radm_bypass_eot_user, 
    output wire radm_bypass_dllp_abort_user, 
    output wire radm_bypass_tlp_abort_user, 
    output wire radm_bypass_ecrc_err_user, 
    output wire [63:0] radm_bypass_addr_user, 
    output wire [1:0] radm_bypass_fmt_user, 
    output wire [2:0] radm_bypass_tc_user, 
    output wire [2:0] radm_bypass_attr_user, 
    output wire [15:0] radm_bypass_reqid_user, 
    output wire [4:0] radm_bypass_type_user, 
    output wire [9:0] radm_bypass_tag_user, 
    output wire radm_bypass_func_num_user, 
    output wire [1:0] radm_bypass_vfunc_num_user, 
    output wire radm_bypass_vfunc_active_user, 
    output wire radm_bypass_td_user, 
    output wire radm_bypass_poisoned_user, 
    output wire [9:0] radm_bypass_dw_len_user, 
    output wire radm_bypass_rom_in_range_user, 
    output wire [3:0] radm_bypass_first_be_user, 
    output wire [3:0] radm_bypass_last_be_user, 
    output wire radm_bypass_io_req_in_range_user, 
    output wire [2:0] radm_bypass_in_membar_range_user, 
    output wire radm_bypass_cpl_last_user, 
    output wire [2:0] radm_bypass_cpl_status_user, 
    output wire [7:0] radm_bypass_st_user, 
    output wire [15:0] radm_bypass_cmpltr_id_user, 
    output wire [11:0] radm_bypass_byte_cnt_user, 
    output wire [1:0] radm_bypass_ats_user, 
    output wire radm_bypass_th_user, 
    output wire [1:0] radm_bypass_ph_user, 
    output wire radm_bypass_bcm_user, 
    input wire [127:0] radm_bypass_data_core, 
    input wire [3:0] radm_bypass_dwen_core, 
    input wire radm_bypass_dv_core, 
    input wire radm_bypass_hv_core, 
    input wire radm_bypass_eot_core, 
    input wire radm_bypass_dllp_abort_core, 
    input wire radm_bypass_tlp_abort_core, 
    input wire radm_bypass_ecrc_err_core, 
    input wire [63:0] radm_bypass_addr_core, 
    input wire [1:0] radm_bypass_fmt_core, 
    input wire [2:0] radm_bypass_tc_core, 
    input wire [2:0] radm_bypass_attr_core, 
    input wire [15:0] radm_bypass_reqid_core, 
    input wire [4:0] radm_bypass_type_core, 
    input wire [9:0] radm_bypass_tag_core, 
    input wire radm_bypass_func_num_core, 
    input wire [1:0] radm_bypass_vfunc_num_core, 
    input wire radm_bypass_vfunc_active_core, 
    input wire radm_bypass_td_core, 
    input wire radm_bypass_poisoned_core, 
    input wire [9:0] radm_bypass_dw_len_core, 
    input wire radm_bypass_rom_in_range_core, 
    input wire [3:0] radm_bypass_first_be_core, 
    input wire [3:0] radm_bypass_last_be_core, 
    input wire radm_bypass_io_req_in_range_core, 
    input wire [2:0] radm_bypass_in_membar_range_core, 
    input wire radm_bypass_cpl_last_core, 
    input wire [2:0] radm_bypass_cpl_status_core, 
    input wire [7:0] radm_bypass_st_core, 
    input wire [15:0] radm_bypass_cmpltr_id_core, 
    input wire [11:0] radm_bypass_byte_cnt_core, 
    input wire [1:0] radm_bypass_ats_core, 
    input wire radm_bypass_th_core, 
    input wire [1:0] radm_bypass_ph_core, 
    input wire radm_bypass_bcm_core, 
    output wire [31:0] lbc_ext_addr_user, 
    output wire [1:0] lbc_ext_cs_user, 
    output wire [3:0] lbc_ext_wr_user, 
    output wire lbc_ext_rom_access_user, 
    output wire lbc_ext_io_access_user, 
    output wire [31:0] lbc_ext_dout_user, 
    output wire [2:0] lbc_ext_bar_num_user, 
    output wire lbc_ext_vfunc_active_user, 
    output wire [1:0] lbc_ext_vfunc_num_user, 
    input wire [63:0] ext_lbc_din_user, 
    input wire [1:0] ext_lbc_ack_user, 
    input wire [31:0] lbc_ext_addr_core, 
    input wire [1:0] lbc_ext_cs_core, 
    input wire [3:0] lbc_ext_wr_core, 
    input wire lbc_ext_rom_access_core, 
    input wire lbc_ext_io_access_core, 
    input wire [31:0] lbc_ext_dout_core, 
    input wire [2:0] lbc_ext_bar_num_core, 
    input wire lbc_ext_vfunc_active_core, 
    input wire [1:0] lbc_ext_vfunc_num_core, 
    output wire [63:0] ext_lbc_din_core, 
    output wire [1:0] ext_lbc_ack_core, 
    input wire [31:0] drp_dbi_din_user, 
    input wire [3:0] drp_dbi_wr_user, 
    input wire [31:0] drp_dbi_addr_user, 
    input wire drp_dbi_cs_user, 
    input wire drp_dbi_cs2_exp_user, 
    input wire [1:0] drp_dbi_vfunc_num_user, 
    input wire drp_dbi_vfunc_active_user, 
    input wire [2:0] drp_dbi_bar_num_user, 
    input wire drp_dbi_rom_access_user, 
    input wire drp_dbi_io_access_user, 
    input wire drp_dbi_func_num_user, 
    input wire drp_app_dbi_ro_wr_disable_user, 
    output wire [31:0] drp_lbc_dbi_dout_user, 
    output wire drp_lbc_dbi_ack_user, 
    output wire [31:0] drp_dbi_din_core, 
    output wire [3:0] drp_dbi_wr_core, 
    output wire [31:0] drp_dbi_addr_core, 
    output wire drp_dbi_cs_core, 
    output wire drp_dbi_cs2_exp_core, 
    output wire [1:0] drp_dbi_vfunc_num_core, 
    output wire drp_dbi_vfunc_active_core, 
    output wire [2:0] drp_dbi_bar_num_core, 
    output wire drp_dbi_rom_access_core, 
    output wire drp_dbi_io_access_core, 
    output wire drp_dbi_func_num_core, 
    output wire drp_app_dbi_ro_wr_disable_core, 
    input wire [31:0] drp_lbc_dbi_dout_core, 
    input wire drp_lbc_dbi_ack_core, 
    input wire user_clk, 
    input wire core_rst_n, 
    input wire user_link_up) ;
    clinet_pipeline u_clinet0_pipeline (.user_clk(user_clk), 
                .user_link_up(user_link_up), 
                .client0_tlp_data_user(client0_tlp_data_user), 
                .client0_tlp_addr_user(client0_tlp_addr_user), 
                .client0_remote_req_id_user(client0_remote_req_id_user), 
                .client0_tlp_byte_en_user(client0_tlp_byte_en_user), 
                .client0_cpl_byte_cnt_user(client0_cpl_byte_cnt_user), 
                .client0_addr_align_en_user(client0_addr_align_en_user), 
                .client0_tlp_tc_user(client0_tlp_tc_user), 
                .client0_tlp_attr_user(client0_tlp_attr_user), 
                .client0_cpl_status_user(client0_cpl_status_user), 
                .client0_cpl_bcm_user(client0_cpl_bcm_user), 
                .client0_tlp_dv_user(client0_tlp_dv_user), 
                .client0_tlp_eot_user(client0_tlp_eot_user), 
                .client0_tlp_bad_eot_user(client0_tlp_bad_eot_user), 
                .client0_tlp_hv_user(client0_tlp_hv_user), 
                .client0_tlp_type_user(client0_tlp_type_user), 
                .client0_tlp_fmt_user(client0_tlp_fmt_user), 
                .client0_tlp_td_user(client0_tlp_td_user), 
                .client0_tlp_byte_len_user(client0_tlp_byte_len_user), 
                .client0_tlp_tid_user(client0_tlp_tid_user), 
                .client0_tlp_ep_user(client0_tlp_ep_user), 
                .client0_tlp_func_num_user(client0_tlp_func_num_user), 
                .client0_tlp_vfunc_num_user(client0_tlp_vfunc_num_user), 
                .client0_tlp_ats_user(client0_tlp_ats_user), 
                .client0_tlp_st_user(client0_tlp_st_user), 
                .client0_tlp_vfunc_active_user(client0_tlp_vfunc_active_user), 
                .client0_tlp_nw_user(client0_tlp_nw_user), 
                .client0_tlp_th_user(client0_tlp_th_user), 
                .client0_tlp_ph_user(client0_tlp_ph_user), 
                .client0_tlp_atu_bypass_user(client0_tlp_atu_bypass_user), 
                .client0_cpl_lookup_id_user(client0_cpl_lookup_id_user), 
                .xadm_client0_halt_user(xadm_client0_halt_user), 
                .client0_tlp_data_core(client0_tlp_data_core), 
                .client0_tlp_addr_core(client0_tlp_addr_core), 
                .client0_remote_req_id_core(client0_remote_req_id_core), 
                .client0_tlp_byte_en_core(client0_tlp_byte_en_core), 
                .client0_cpl_byte_cnt_core(client0_cpl_byte_cnt_core), 
                .client0_addr_align_en_core(client0_addr_align_en_core), 
                .client0_tlp_tc_core(client0_tlp_tc_core), 
                .client0_tlp_attr_core(client0_tlp_attr_core), 
                .client0_cpl_status_core(client0_cpl_status_core), 
                .client0_cpl_bcm_core(client0_cpl_bcm_core), 
                .client0_tlp_dv_core(client0_tlp_dv_core), 
                .client0_tlp_eot_core(client0_tlp_eot_core), 
                .client0_tlp_bad_eot_core(client0_tlp_bad_eot_core), 
                .client0_tlp_hv_core(client0_tlp_hv_core), 
                .client0_tlp_type_core(client0_tlp_type_core), 
                .client0_tlp_fmt_core(client0_tlp_fmt_core), 
                .client0_tlp_td_core(client0_tlp_td_core), 
                .client0_tlp_byte_len_core(client0_tlp_byte_len_core), 
                .client0_tlp_tid_core(client0_tlp_tid_core), 
                .client0_tlp_ep_core(client0_tlp_ep_core), 
                .client0_tlp_func_num_core(client0_tlp_func_num_core), 
                .client0_tlp_vfunc_num_core(client0_tlp_vfunc_num_core), 
                .client0_tlp_ats_core(client0_tlp_ats_core), 
                .client0_tlp_st_core(client0_tlp_st_core), 
                .client0_tlp_vfunc_active_core(client0_tlp_vfunc_active_core), 
                .client0_tlp_nw_core(client0_tlp_nw_core), 
                .client0_tlp_th_core(client0_tlp_th_core), 
                .client0_tlp_ph_core(client0_tlp_ph_core), 
                .client0_tlp_atu_bypass_core(client0_tlp_atu_bypass_core), 
                .client0_cpl_lookup_id_core(client0_cpl_lookup_id_core), 
                .xadm_client0_halt_core(xadm_client0_halt_core)) ; 
    clinet_pipeline u_clinet1_pipeline (.user_clk(user_clk), 
                .user_link_up(user_link_up), 
                .client0_tlp_data_user(client1_tlp_data_user), 
                .client0_tlp_addr_user(client1_tlp_addr_user), 
                .client0_remote_req_id_user(client1_remote_req_id_user), 
                .client0_tlp_byte_en_user(client1_tlp_byte_en_user), 
                .client0_cpl_byte_cnt_user(client1_cpl_byte_cnt_user), 
                .client0_addr_align_en_user(client1_addr_align_en_user), 
                .client0_tlp_tc_user(client1_tlp_tc_user), 
                .client0_tlp_attr_user(client1_tlp_attr_user), 
                .client0_cpl_status_user(client1_cpl_status_user), 
                .client0_cpl_bcm_user(client1_cpl_bcm_user), 
                .client0_tlp_dv_user(client1_tlp_dv_user), 
                .client0_tlp_eot_user(client1_tlp_eot_user), 
                .client0_tlp_bad_eot_user(client1_tlp_bad_eot_user), 
                .client0_tlp_hv_user(client1_tlp_hv_user), 
                .client0_tlp_type_user(client1_tlp_type_user), 
                .client0_tlp_fmt_user(client1_tlp_fmt_user), 
                .client0_tlp_td_user(client1_tlp_td_user), 
                .client0_tlp_byte_len_user(client1_tlp_byte_len_user), 
                .client0_tlp_tid_user(client1_tlp_tid_user), 
                .client0_tlp_ep_user(client1_tlp_ep_user), 
                .client0_tlp_func_num_user(client1_tlp_func_num_user), 
                .client0_tlp_vfunc_num_user(client1_tlp_vfunc_num_user), 
                .client0_tlp_ats_user(client1_tlp_ats_user), 
                .client0_tlp_st_user(client1_tlp_st_user), 
                .client0_tlp_vfunc_active_user(client1_tlp_vfunc_active_user), 
                .client0_tlp_nw_user(client1_tlp_nw_user), 
                .client0_tlp_th_user(client1_tlp_th_user), 
                .client0_tlp_ph_user(client1_tlp_ph_user), 
                .client0_tlp_atu_bypass_user(client1_tlp_atu_bypass_user), 
                .client0_cpl_lookup_id_user(client1_cpl_lookup_id_user), 
                .xadm_client0_halt_user(xadm_client1_halt_user), 
                .client0_tlp_data_core(client1_tlp_data_core), 
                .client0_tlp_addr_core(client1_tlp_addr_core), 
                .client0_remote_req_id_core(client1_remote_req_id_core), 
                .client0_tlp_byte_en_core(client1_tlp_byte_en_core), 
                .client0_cpl_byte_cnt_core(client1_cpl_byte_cnt_core), 
                .client0_addr_align_en_core(client1_addr_align_en_core), 
                .client0_tlp_tc_core(client1_tlp_tc_core), 
                .client0_tlp_attr_core(client1_tlp_attr_core), 
                .client0_cpl_status_core(client1_cpl_status_core), 
                .client0_cpl_bcm_core(client1_cpl_bcm_core), 
                .client0_tlp_dv_core(client1_tlp_dv_core), 
                .client0_tlp_eot_core(client1_tlp_eot_core), 
                .client0_tlp_bad_eot_core(client1_tlp_bad_eot_core), 
                .client0_tlp_hv_core(client1_tlp_hv_core), 
                .client0_tlp_type_core(client1_tlp_type_core), 
                .client0_tlp_fmt_core(client1_tlp_fmt_core), 
                .client0_tlp_td_core(client1_tlp_td_core), 
                .client0_tlp_byte_len_core(client1_tlp_byte_len_core), 
                .client0_tlp_tid_core(client1_tlp_tid_core), 
                .client0_tlp_ep_core(client1_tlp_ep_core), 
                .client0_tlp_func_num_core(client1_tlp_func_num_core), 
                .client0_tlp_vfunc_num_core(client1_tlp_vfunc_num_core), 
                .client0_tlp_ats_core(client1_tlp_ats_core), 
                .client0_tlp_st_core(client1_tlp_st_core), 
                .client0_tlp_vfunc_active_core(client1_tlp_vfunc_active_core), 
                .client0_tlp_nw_core(client1_tlp_nw_core), 
                .client0_tlp_th_core(client1_tlp_th_core), 
                .client0_tlp_ph_core(client1_tlp_ph_core), 
                .client0_tlp_atu_bypass_core(client1_tlp_atu_bypass_core), 
                .client0_cpl_lookup_id_core(client1_cpl_lookup_id_core), 
                .xadm_client0_halt_core(xadm_client1_halt_core)) ; 
    bypass_pipeline u_bypass_pipeline (.user_clk(user_clk), 
                .user_link_up(user_link_up), 
                .radm_bypass_data_user(radm_bypass_data_user), 
                .radm_bypass_dwen_user(radm_bypass_dwen_user), 
                .radm_bypass_dv_user(radm_bypass_dv_user), 
                .radm_bypass_hv_user(radm_bypass_hv_user), 
                .radm_bypass_eot_user(radm_bypass_eot_user), 
                .radm_bypass_dllp_abort_user(radm_bypass_dllp_abort_user), 
                .radm_bypass_tlp_abort_user(radm_bypass_tlp_abort_user), 
                .radm_bypass_ecrc_err_user(radm_bypass_ecrc_err_user), 
                .radm_bypass_addr_user(radm_bypass_addr_user), 
                .radm_bypass_fmt_user(radm_bypass_fmt_user), 
                .radm_bypass_tc_user(radm_bypass_tc_user), 
                .radm_bypass_attr_user(radm_bypass_attr_user), 
                .radm_bypass_reqid_user(radm_bypass_reqid_user), 
                .radm_bypass_type_user(radm_bypass_type_user), 
                .radm_bypass_tag_user(radm_bypass_tag_user), 
                .radm_bypass_func_num_user(radm_bypass_func_num_user), 
                .radm_bypass_vfunc_num_user(radm_bypass_vfunc_num_user), 
                .radm_bypass_vfunc_active_user(radm_bypass_vfunc_active_user), 
                .radm_bypass_td_user(radm_bypass_td_user), 
                .radm_bypass_poisoned_user(radm_bypass_poisoned_user), 
                .radm_bypass_dw_len_user(radm_bypass_dw_len_user), 
                .radm_bypass_rom_in_range_user(radm_bypass_rom_in_range_user), 
                .radm_bypass_first_be_user(radm_bypass_first_be_user), 
                .radm_bypass_last_be_user(radm_bypass_last_be_user), 
                .radm_bypass_io_req_in_range_user(radm_bypass_io_req_in_range_user), 
                .radm_bypass_in_membar_range_user(radm_bypass_in_membar_range_user), 
                .radm_bypass_cpl_last_user(radm_bypass_cpl_last_user), 
                .radm_bypass_cpl_status_user(radm_bypass_cpl_status_user), 
                .radm_bypass_st_user(radm_bypass_st_user), 
                .radm_bypass_cmpltr_id_user(radm_bypass_cmpltr_id_user), 
                .radm_bypass_byte_cnt_user(radm_bypass_byte_cnt_user), 
                .radm_bypass_ats_user(radm_bypass_ats_user), 
                .radm_bypass_th_user(radm_bypass_th_user), 
                .radm_bypass_ph_user(radm_bypass_ph_user), 
                .radm_bypass_bcm_user(radm_bypass_bcm_user), 
                .radm_bypass_data_core(radm_bypass_data_core), 
                .radm_bypass_dwen_core(radm_bypass_dwen_core), 
                .radm_bypass_dv_core(radm_bypass_dv_core), 
                .radm_bypass_hv_core(radm_bypass_hv_core), 
                .radm_bypass_eot_core(radm_bypass_eot_core), 
                .radm_bypass_dllp_abort_core(radm_bypass_dllp_abort_core), 
                .radm_bypass_tlp_abort_core(radm_bypass_tlp_abort_core), 
                .radm_bypass_ecrc_err_core(radm_bypass_ecrc_err_core), 
                .radm_bypass_addr_core(radm_bypass_addr_core), 
                .radm_bypass_fmt_core(radm_bypass_fmt_core), 
                .radm_bypass_tc_core(radm_bypass_tc_core), 
                .radm_bypass_attr_core(radm_bypass_attr_core), 
                .radm_bypass_reqid_core(radm_bypass_reqid_core), 
                .radm_bypass_type_core(radm_bypass_type_core), 
                .radm_bypass_tag_core(radm_bypass_tag_core), 
                .radm_bypass_func_num_core(radm_bypass_func_num_core), 
                .radm_bypass_vfunc_num_core(radm_bypass_vfunc_num_core), 
                .radm_bypass_vfunc_active_core(radm_bypass_vfunc_active_core), 
                .radm_bypass_td_core(radm_bypass_td_core), 
                .radm_bypass_poisoned_core(radm_bypass_poisoned_core), 
                .radm_bypass_dw_len_core(radm_bypass_dw_len_core), 
                .radm_bypass_rom_in_range_core(radm_bypass_rom_in_range_core), 
                .radm_bypass_first_be_core(radm_bypass_first_be_core), 
                .radm_bypass_last_be_core(radm_bypass_last_be_core), 
                .radm_bypass_io_req_in_range_core(radm_bypass_io_req_in_range_core), 
                .radm_bypass_in_membar_range_core(radm_bypass_in_membar_range_core), 
                .radm_bypass_cpl_last_core(radm_bypass_cpl_last_core), 
                .radm_bypass_cpl_status_core(radm_bypass_cpl_status_core), 
                .radm_bypass_st_core(radm_bypass_st_core), 
                .radm_bypass_cmpltr_id_core(radm_bypass_cmpltr_id_core), 
                .radm_bypass_byte_cnt_core(radm_bypass_byte_cnt_core), 
                .radm_bypass_ats_core(radm_bypass_ats_core), 
                .radm_bypass_th_core(radm_bypass_th_core), 
                .radm_bypass_ph_core(radm_bypass_ph_core), 
                .radm_bypass_bcm_core(radm_bypass_bcm_core)) ; 
    elbi_pipeline u_elbi_pipeline (.user_clk(user_clk), 
                .user_link_up(user_link_up), 
                .lbc_ext_addr_user(lbc_ext_addr_user), 
                .lbc_ext_cs_user(lbc_ext_cs_user), 
                .lbc_ext_wr_user(lbc_ext_wr_user), 
                .lbc_ext_rom_access_user(lbc_ext_rom_access_user), 
                .lbc_ext_io_access_user(lbc_ext_io_access_user), 
                .lbc_ext_dout_user(lbc_ext_dout_user), 
                .lbc_ext_bar_num_user(lbc_ext_bar_num_user), 
                .lbc_ext_vfunc_active_user(lbc_ext_vfunc_active_user), 
                .lbc_ext_vfunc_num_user(lbc_ext_vfunc_num_user), 
                .ext_lbc_din_user(ext_lbc_din_user), 
                .ext_lbc_ack_user(ext_lbc_ack_user), 
                .lbc_ext_addr_core(lbc_ext_addr_core), 
                .lbc_ext_cs_core(lbc_ext_cs_core), 
                .lbc_ext_wr_core(lbc_ext_wr_core), 
                .lbc_ext_rom_access_core(lbc_ext_rom_access_core), 
                .lbc_ext_io_access_core(lbc_ext_io_access_core), 
                .lbc_ext_dout_core(lbc_ext_dout_core), 
                .lbc_ext_bar_num_core(lbc_ext_bar_num_core), 
                .lbc_ext_vfunc_active_core(lbc_ext_vfunc_active_core), 
                .lbc_ext_vfunc_num_core(lbc_ext_vfunc_num_core), 
                .ext_lbc_din_core(ext_lbc_din_core), 
                .ext_lbc_ack_core(ext_lbc_ack_core)) ; 
    dbi_pipeline u_dbi_pipeline (.user_clk(user_clk), 
                .core_rst_n(core_rst_n), 
                .drp_dbi_din_user(drp_dbi_din_user), 
                .drp_dbi_wr_user(drp_dbi_wr_user), 
                .drp_dbi_addr_user(drp_dbi_addr_user), 
                .drp_dbi_cs_user(drp_dbi_cs_user), 
                .drp_dbi_cs2_exp_user(drp_dbi_cs2_exp_user), 
                .drp_dbi_vfunc_num_user(drp_dbi_vfunc_num_user), 
                .drp_dbi_vfunc_active_user(drp_dbi_vfunc_active_user), 
                .drp_dbi_bar_num_user(drp_dbi_bar_num_user), 
                .drp_dbi_rom_access_user(drp_dbi_rom_access_user), 
                .drp_dbi_io_access_user(drp_dbi_io_access_user), 
                .drp_dbi_func_num_user(drp_dbi_func_num_user), 
                .drp_app_dbi_ro_wr_disable_user(drp_app_dbi_ro_wr_disable_user), 
                .drp_lbc_dbi_dout_user(drp_lbc_dbi_dout_user), 
                .drp_lbc_dbi_ack_user(drp_lbc_dbi_ack_user), 
                .drp_dbi_din_core(drp_dbi_din_core), 
                .drp_dbi_wr_core(drp_dbi_wr_core), 
                .drp_dbi_addr_core(drp_dbi_addr_core), 
                .drp_dbi_cs_core(drp_dbi_cs_core), 
                .drp_dbi_cs2_exp_core(drp_dbi_cs2_exp_core), 
                .drp_dbi_vfunc_num_core(drp_dbi_vfunc_num_core), 
                .drp_dbi_vfunc_active_core(drp_dbi_vfunc_active_core), 
                .drp_dbi_bar_num_core(drp_dbi_bar_num_core), 
                .drp_dbi_rom_access_core(drp_dbi_rom_access_core), 
                .drp_dbi_io_access_core(drp_dbi_io_access_core), 
                .drp_dbi_func_num_core(drp_dbi_func_num_core), 
                .drp_app_dbi_ro_wr_disable_core(drp_app_dbi_ro_wr_disable_core), 
                .drp_lbc_dbi_dout_core(drp_lbc_dbi_dout_core), 
                .drp_lbc_dbi_ack_core(drp_lbc_dbi_ack_core)) ; 
endmodule



module clinet_pipeline (
    input wire user_clk, 
    input wire user_link_up, 
    output wire [127:0] client0_tlp_data_core, 
    output wire [63:0] client0_tlp_addr_core, 
    output wire [15:0] client0_remote_req_id_core, 
    output wire [7:0] client0_tlp_byte_en_core, 
    output wire [11:0] client0_cpl_byte_cnt_core, 
    output wire client0_addr_align_en_core, 
    output wire [2:0] client0_tlp_tc_core, 
    output wire [2:0] client0_tlp_attr_core, 
    output wire [2:0] client0_cpl_status_core, 
    output wire client0_cpl_bcm_core, 
    output wire client0_tlp_dv_core, 
    output wire client0_tlp_eot_core, 
    output wire client0_tlp_bad_eot_core, 
    output wire client0_tlp_hv_core, 
    output wire [4:0] client0_tlp_type_core, 
    output wire [1:0] client0_tlp_fmt_core, 
    output wire client0_tlp_td_core, 
    output wire [12:0] client0_tlp_byte_len_core, 
    output wire [9:0] client0_tlp_tid_core, 
    output wire client0_tlp_ep_core, 
    output wire client0_tlp_func_num_core, 
    output wire [1:0] client0_tlp_vfunc_num_core, 
    output wire [1:0] client0_tlp_ats_core, 
    output wire [7:0] client0_tlp_st_core, 
    output wire client0_tlp_vfunc_active_core, 
    output wire client0_tlp_nw_core, 
    output wire client0_tlp_th_core, 
    output wire [1:0] client0_tlp_ph_core, 
    output wire client0_tlp_atu_bypass_core, 
    output wire [9:0] client0_cpl_lookup_id_core, 
    input wire xadm_client0_halt_core, 
    input wire [127:0] client0_tlp_data_user, 
    input wire [63:0] client0_tlp_addr_user, 
    input wire [15:0] client0_remote_req_id_user, 
    input wire [7:0] client0_tlp_byte_en_user, 
    input wire [11:0] client0_cpl_byte_cnt_user, 
    input wire client0_addr_align_en_user, 
    input wire [2:0] client0_tlp_tc_user, 
    input wire [2:0] client0_tlp_attr_user, 
    input wire [2:0] client0_cpl_status_user, 
    input wire client0_cpl_bcm_user, 
    input wire client0_tlp_dv_user, 
    input wire client0_tlp_eot_user, 
    input wire client0_tlp_bad_eot_user, 
    input wire client0_tlp_hv_user, 
    input wire [4:0] client0_tlp_type_user, 
    input wire [1:0] client0_tlp_fmt_user, 
    input wire client0_tlp_td_user, 
    input wire [12:0] client0_tlp_byte_len_user, 
    input wire [9:0] client0_tlp_tid_user, 
    input wire client0_tlp_ep_user, 
    input wire client0_tlp_func_num_user, 
    input wire [1:0] client0_tlp_vfunc_num_user, 
    input wire [1:0] client0_tlp_ats_user, 
    input wire [7:0] client0_tlp_st_user, 
    input wire client0_tlp_vfunc_active_user, 
    input wire client0_tlp_nw_user, 
    input wire client0_tlp_th_user, 
    input wire [1:0] client0_tlp_ph_user, 
    input wire client0_tlp_atu_bypass_user, 
    input wire [9:0] client0_cpl_lookup_id_user, 
    output reg xadm_client0_halt_user) ;
    // ====================================================================
    // Parameter/Wire/Reg
    // ====================================================================
    reg xadm_client0_halt_nege ; 
    wire client0_handshark_ok_user ; 
    wire client0_handshark_ok_core ; 
    reg d0_vld ; 
    reg d1_vld ; 
    reg halt_vld_cnt ; 
    reg [127:0] client0_tlp_data_dly ; 
    reg client0_tlp_dv_dly ; 
    reg client0_tlp_eot_dly ; 
    reg [127:0] client0_tlp_data_dly2 ; 
    reg [63:0] client0_tlp_addr_dly2 ; 
    reg [15:0] client0_remote_req_id_dly2 ; 
    reg [7:0] client0_tlp_byte_en_dly2 ; 
    reg [11:0] client0_cpl_byte_cnt_dly2 ; 
    reg client0_addr_align_en_dly2 ; 
    reg [2:0] client0_tlp_tc_dly2 ; 
    reg [2:0] client0_tlp_attr_dly2 ; 
    reg [2:0] client0_cpl_status_dly2 ; 
    reg client0_cpl_bcm_dly2 ; 
    reg client0_tlp_dv_dly2 ; 
    reg client0_tlp_eot_dly2 ; 
    reg client0_tlp_bad_eot_dly2 ; 
    reg client0_tlp_hv_dly2 ; 
    reg [4:0] client0_tlp_type_dly2 ; 
    reg [1:0] client0_tlp_fmt_dly2 ; 
    reg client0_tlp_td_dly2 ; 
    reg [12:0] client0_tlp_byte_len_dly2 ; 
    reg [9:0] client0_tlp_tid_dly2 ; 
    reg client0_tlp_ep_dly2 ; 
    reg client0_tlp_func_num_dly2 ; 
    reg [1:0] client0_tlp_vfunc_num_dly2 ; 
    reg [1:0] client0_tlp_ats_dly2 ; 
    reg [7:0] client0_tlp_st_dly2 ; 
    reg client0_tlp_vfunc_active_dly2 ; 
    reg client0_tlp_nw_dly2 ; 
    reg client0_tlp_th_dly2 ; 
    reg [1:0] client0_tlp_ph_dly2 ; 
    reg client0_tlp_atu_bypass_dly2 ; 
    reg [9:0] client0_cpl_lookup_id_dly2 ; 
    // ====================================================================
    // Main Code
    // ====================================================================
    assign client0_handshark_ok_user = ((!xadm_client0_halt_user) & (client0_tlp_dv_user | client0_tlp_hv_user)) ; 
    assign client0_handshark_ok_core = ((!xadm_client0_halt_nege) & (client0_tlp_dv_core | client0_tlp_hv_core)) ; 
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                begin
                    client0_tlp_data_dly <=  'd0 ;
                    client0_tlp_eot_dly <=  'd0 ;
                    client0_tlp_dv_dly <=  'd0 ;
                end
            else
                begin
                    if (client0_handshark_ok_user) 
                        client0_tlp_eot_dly <=  client0_tlp_eot_user ;
                    else
                        if (client0_tlp_eot_core) 
                            client0_tlp_eot_dly <=  1'b0 ;
                    if (client0_handshark_ok_user) 
                        client0_tlp_dv_dly <=  client0_tlp_dv_user ;
                    else
                        if (client0_tlp_dv_core) 
                            client0_tlp_dv_dly <=  1'b0 ;
                    if (client0_handshark_ok_user) 
                        client0_tlp_data_dly <=  client0_tlp_data_user ;
                end
        end
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                begin
                    client0_tlp_addr_dly2 <=  'd0 ;
                    client0_remote_req_id_dly2 <=  'd0 ;
                    client0_tlp_byte_en_dly2 <=  'd0 ;
                    client0_cpl_byte_cnt_dly2 <=  'd0 ;
                    client0_addr_align_en_dly2 <=  'd0 ;
                    client0_tlp_tc_dly2 <=  'd0 ;
                    client0_tlp_attr_dly2 <=  'd0 ;
                    client0_cpl_status_dly2 <=  'd0 ;
                    client0_cpl_bcm_dly2 <=  'd0 ;
                    client0_tlp_bad_eot_dly2 <=  'd0 ;
                    client0_tlp_type_dly2 <=  'd0 ;
                    client0_tlp_fmt_dly2 <=  'd0 ;
                    client0_tlp_td_dly2 <=  'd0 ;
                    client0_tlp_byte_len_dly2 <=  'd0 ;
                    client0_tlp_tid_dly2 <=  'd0 ;
                    client0_tlp_ep_dly2 <=  'd0 ;
                    client0_tlp_func_num_dly2 <=  'd0 ;
                    client0_tlp_vfunc_num_dly2 <=  'd0 ;
                    client0_tlp_ats_dly2 <=  'd0 ;
                    client0_tlp_st_dly2 <=  'd0 ;
                    client0_tlp_vfunc_active_dly2 <=  'd0 ;
                    client0_tlp_nw_dly2 <=  'd0 ;
                    client0_tlp_th_dly2 <=  'd0 ;
                    client0_tlp_ph_dly2 <=  'd0 ;
                    client0_tlp_atu_bypass_dly2 <=  'd0 ;
                    client0_cpl_lookup_id_dly2 <=  'd0 ;
                    client0_tlp_hv_dly2 <=  'd0 ;
                    client0_tlp_data_dly2 <=  'd0 ;
                    client0_tlp_eot_dly2 <=  'd0 ;
                    client0_tlp_dv_dly2 <=  'd0 ;
                end
            else
                begin
                    if ((client0_tlp_hv_user & (!xadm_client0_halt_user))) 
                        begin
                            client0_tlp_addr_dly2 <=  client0_tlp_addr_user ;
                            client0_remote_req_id_dly2 <=  client0_remote_req_id_user ;
                            client0_tlp_byte_en_dly2 <=  client0_tlp_byte_en_user ;
                            client0_cpl_byte_cnt_dly2 <=  client0_cpl_byte_cnt_user ;
                            client0_addr_align_en_dly2 <=  client0_addr_align_en_user ;
                            client0_tlp_tc_dly2 <=  client0_tlp_tc_user ;
                            client0_tlp_attr_dly2 <=  client0_tlp_attr_user ;
                            client0_cpl_status_dly2 <=  client0_cpl_status_user ;
                            client0_cpl_bcm_dly2 <=  client0_cpl_bcm_user ;
                            client0_tlp_bad_eot_dly2 <=  client0_tlp_bad_eot_user ;
                            client0_tlp_type_dly2 <=  client0_tlp_type_user ;
                            client0_tlp_fmt_dly2 <=  client0_tlp_fmt_user ;
                            client0_tlp_td_dly2 <=  client0_tlp_td_user ;
                            client0_tlp_byte_len_dly2 <=  client0_tlp_byte_len_user ;
                            client0_tlp_tid_dly2 <=  client0_tlp_tid_user ;
                            client0_tlp_ep_dly2 <=  client0_tlp_ep_user ;
                            client0_tlp_func_num_dly2 <=  client0_tlp_func_num_user ;
                            client0_tlp_vfunc_num_dly2 <=  client0_tlp_vfunc_num_user ;
                            client0_tlp_ats_dly2 <=  client0_tlp_ats_user ;
                            client0_tlp_st_dly2 <=  client0_tlp_st_user ;
                            client0_tlp_vfunc_active_dly2 <=  client0_tlp_vfunc_active_user ;
                            client0_tlp_nw_dly2 <=  client0_tlp_nw_user ;
                            client0_tlp_th_dly2 <=  client0_tlp_th_user ;
                            client0_tlp_ph_dly2 <=  client0_tlp_ph_user ;
                            client0_tlp_atu_bypass_dly2 <=  client0_tlp_atu_bypass_user ;
                            client0_cpl_lookup_id_dly2 <=  client0_cpl_lookup_id_user ;
                        end
                    if ((client0_tlp_hv_user & (!xadm_client0_halt_user))) 
                        client0_tlp_hv_dly2 <=  1'b1 ;
                    else
                        if ((!xadm_client0_halt_nege)) 
                            client0_tlp_hv_dly2 <=  1'b0 ;
                    if ((client0_tlp_eot_dly2 & (!xadm_client0_halt_nege))) 
                        client0_tlp_dv_dly2 <=  1'b0 ;
                    else
                        if ((client0_tlp_hv_user & (!xadm_client0_halt_user))) 
                            client0_tlp_dv_dly2 <=  client0_tlp_dv_user ;
                        else
                            if (client0_tlp_dv_dly) 
                                client0_tlp_dv_dly2 <=  1'b1 ;
                    if ((client0_tlp_eot_dly2 & (!xadm_client0_halt_nege))) 
                        client0_tlp_eot_dly2 <=  1'b0 ;
                    else
                        if ((!d1_vld)) 
                            client0_tlp_eot_dly2 <=  client0_tlp_eot_user ;
                        else
                            if ((!xadm_client0_halt_nege)) 
                                client0_tlp_eot_dly2 <=  (halt_vld_cnt ? client0_tlp_eot_user : client0_tlp_eot_dly) ;
                    if ((!d1_vld)) 
                        client0_tlp_data_dly2 <=  client0_tlp_data_user ;
                    else
                        if (client0_handshark_ok_core) 
                            client0_tlp_data_dly2 <=  (halt_vld_cnt ? client0_tlp_data_user : client0_tlp_data_dly) ;
                end
        end
    always
        @(negedge user_clk)
        begin
            xadm_client0_halt_nege <=  xadm_client0_halt_core ;
        end
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                begin
                    d0_vld <=  1'b0 ;
                end
            else
                if ((client0_tlp_eot_user & (!xadm_client0_halt_user))) 
                    d0_vld <=  1'b0 ;
                else
                    if ((client0_tlp_hv_user & (!xadm_client0_halt_user))) 
                        d0_vld <=  1'b1 ;
        end
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                begin
                    d1_vld <=  1'b0 ;
                end
            else
                if ((client0_tlp_eot_core & (!xadm_client0_halt_core))) 
                    d1_vld <=  1'b0 ;
                else
                    if ((client0_tlp_hv_user & (!xadm_client0_halt_user))) 
                        d1_vld <=  1'b1 ;
        end
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                xadm_client0_halt_user <=  1'b0 ;
            else
                if ((client0_tlp_eot_user & (!xadm_client0_halt_user))) 
                    xadm_client0_halt_user <=  1'b1 ;
                else
                    if (d0_vld) 
                        xadm_client0_halt_user <=  (!client0_handshark_ok_core) ;
                    else
                        if ((client0_tlp_eot_core & (!xadm_client0_halt_nege))) 
                            xadm_client0_halt_user <=  1'b0 ;
        end
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                halt_vld_cnt <=  1'b0 ;
            else
                if ((d0_vld & client0_handshark_ok_core)) 
                    halt_vld_cnt <=  1'b1 ;
                else
                    if ((client0_tlp_hv_user & (!xadm_client0_halt_user))) 
                        halt_vld_cnt <=  1'b1 ;
                    else
                        halt_vld_cnt <=  1'b0 ;
        end
    assign client0_tlp_data_core = client0_tlp_data_dly2 ; 
    assign client0_tlp_addr_core = client0_tlp_addr_dly2 ; 
    assign client0_remote_req_id_core = client0_remote_req_id_dly2 ; 
    assign client0_tlp_byte_en_core = client0_tlp_byte_en_dly2 ; 
    assign client0_cpl_byte_cnt_core = client0_cpl_byte_cnt_dly2 ; 
    assign client0_addr_align_en_core = client0_addr_align_en_dly2 ; 
    assign client0_tlp_tc_core = client0_tlp_tc_dly2 ; 
    assign client0_tlp_attr_core = client0_tlp_attr_dly2 ; 
    assign client0_cpl_status_core = client0_cpl_status_dly2 ; 
    assign client0_cpl_bcm_core = client0_cpl_bcm_dly2 ; 
    assign client0_tlp_dv_core = client0_tlp_dv_dly2 ; 
    assign client0_tlp_eot_core = client0_tlp_eot_dly2 ; 
    assign client0_tlp_bad_eot_core = client0_tlp_bad_eot_dly2 ; 
    assign client0_tlp_hv_core = client0_tlp_hv_dly2 ; 
    assign client0_tlp_type_core = client0_tlp_type_dly2 ; 
    assign client0_tlp_fmt_core = client0_tlp_fmt_dly2 ; 
    assign client0_tlp_td_core = client0_tlp_td_dly2 ; 
    assign client0_tlp_byte_len_core = client0_tlp_byte_len_dly2 ; 
    assign client0_tlp_tid_core = client0_tlp_tid_dly2 ; 
    assign client0_tlp_ep_core = client0_tlp_ep_dly2 ; 
    assign client0_tlp_func_num_core = client0_tlp_func_num_dly2 ; 
    assign client0_tlp_vfunc_num_core = client0_tlp_vfunc_num_dly2 ; 
    assign client0_tlp_ats_core = client0_tlp_ats_dly2 ; 
    assign client0_tlp_st_core = client0_tlp_st_dly2 ; 
    assign client0_tlp_vfunc_active_core = client0_tlp_vfunc_active_dly2 ; 
    assign client0_tlp_nw_core = client0_tlp_nw_dly2 ; 
    assign client0_tlp_th_core = client0_tlp_th_dly2 ; 
    assign client0_tlp_ph_core = client0_tlp_ph_dly2 ; 
    assign client0_tlp_atu_bypass_core = client0_tlp_atu_bypass_dly2 ; 
    assign client0_cpl_lookup_id_core = client0_cpl_lookup_id_dly2 ; 
endmodule



module bypass_pipeline (
    input wire user_clk, 
    input wire user_link_up, 
    output reg [127:0] radm_bypass_data_user, 
    output reg [3:0] radm_bypass_dwen_user, 
    output reg radm_bypass_dv_user, 
    output reg radm_bypass_hv_user, 
    output reg radm_bypass_eot_user, 
    output reg radm_bypass_dllp_abort_user, 
    output reg radm_bypass_tlp_abort_user, 
    output reg radm_bypass_ecrc_err_user, 
    output reg [63:0] radm_bypass_addr_user, 
    output reg [1:0] radm_bypass_fmt_user, 
    output reg [2:0] radm_bypass_tc_user, 
    output reg [2:0] radm_bypass_attr_user, 
    output reg [15:0] radm_bypass_reqid_user, 
    output reg [4:0] radm_bypass_type_user, 
    output reg [9:0] radm_bypass_tag_user, 
    output reg radm_bypass_func_num_user, 
    output reg [1:0] radm_bypass_vfunc_num_user, 
    output reg radm_bypass_vfunc_active_user, 
    output reg radm_bypass_td_user, 
    output reg radm_bypass_poisoned_user, 
    output reg [9:0] radm_bypass_dw_len_user, 
    output reg radm_bypass_rom_in_range_user, 
    output reg [3:0] radm_bypass_first_be_user, 
    output reg [3:0] radm_bypass_last_be_user, 
    output reg radm_bypass_io_req_in_range_user, 
    output reg [2:0] radm_bypass_in_membar_range_user, 
    output reg radm_bypass_cpl_last_user, 
    output reg [2:0] radm_bypass_cpl_status_user, 
    output reg [7:0] radm_bypass_st_user, 
    output reg [15:0] radm_bypass_cmpltr_id_user, 
    output reg [11:0] radm_bypass_byte_cnt_user, 
    output reg [1:0] radm_bypass_ats_user, 
    output reg radm_bypass_th_user, 
    output reg [1:0] radm_bypass_ph_user, 
    output reg radm_bypass_bcm_user, 
    input wire [127:0] radm_bypass_data_core, 
    input wire [3:0] radm_bypass_dwen_core, 
    input wire radm_bypass_dv_core, 
    input wire radm_bypass_hv_core, 
    input wire radm_bypass_eot_core, 
    input wire radm_bypass_dllp_abort_core, 
    input wire radm_bypass_tlp_abort_core, 
    input wire radm_bypass_ecrc_err_core, 
    input wire [63:0] radm_bypass_addr_core, 
    input wire [1:0] radm_bypass_fmt_core, 
    input wire [2:0] radm_bypass_tc_core, 
    input wire [2:0] radm_bypass_attr_core, 
    input wire [15:0] radm_bypass_reqid_core, 
    input wire [4:0] radm_bypass_type_core, 
    input wire [9:0] radm_bypass_tag_core, 
    input wire radm_bypass_func_num_core, 
    input wire [1:0] radm_bypass_vfunc_num_core, 
    input wire radm_bypass_vfunc_active_core, 
    input wire radm_bypass_td_core, 
    input wire radm_bypass_poisoned_core, 
    input wire [9:0] radm_bypass_dw_len_core, 
    input wire radm_bypass_rom_in_range_core, 
    input wire [3:0] radm_bypass_first_be_core, 
    input wire [3:0] radm_bypass_last_be_core, 
    input wire radm_bypass_io_req_in_range_core, 
    input wire [2:0] radm_bypass_in_membar_range_core, 
    input wire radm_bypass_cpl_last_core, 
    input wire [2:0] radm_bypass_cpl_status_core, 
    input wire [7:0] radm_bypass_st_core, 
    input wire [15:0] radm_bypass_cmpltr_id_core, 
    input wire [11:0] radm_bypass_byte_cnt_core, 
    input wire [1:0] radm_bypass_ats_core, 
    input wire radm_bypass_th_core, 
    input wire [1:0] radm_bypass_ph_core, 
    input wire radm_bypass_bcm_core) ;
    // ====================================================================
    // Parameter/Wire/Reg
    // ====================================================================
    reg [127:0] radm_bypass_data_nege ; 
    reg [3:0] radm_bypass_dwen_nege ; 
    reg radm_bypass_dv_nege ; 
    reg radm_bypass_hv_nege ; 
    reg radm_bypass_eot_nege ; 
    reg radm_bypass_dllp_abort_nege ; 
    reg radm_bypass_tlp_abort_nege ; 
    reg radm_bypass_ecrc_err_nege ; 
    reg [63:0] radm_bypass_addr_nege ; 
    reg [1:0] radm_bypass_fmt_nege ; 
    reg [2:0] radm_bypass_tc_nege ; 
    reg [2:0] radm_bypass_attr_nege ; 
    reg [15:0] radm_bypass_reqid_nege ; 
    reg [4:0] radm_bypass_type_nege ; 
    reg [9:0] radm_bypass_tag_nege ; 
    reg radm_bypass_func_num_nege ; 
    reg [1:0] radm_bypass_vfunc_num_nege ; 
    reg radm_bypass_vfunc_active_nege ; 
    reg radm_bypass_td_nege ; 
    reg radm_bypass_poisoned_nege ; 
    reg [9:0] radm_bypass_dw_len_nege ; 
    reg radm_bypass_rom_in_range_nege ; 
    reg [3:0] radm_bypass_first_be_nege ; 
    reg [3:0] radm_bypass_last_be_nege ; 
    reg radm_bypass_io_req_in_range_nege ; 
    reg [2:0] radm_bypass_in_membar_range_nege ; 
    reg radm_bypass_cpl_last_nege ; 
    reg [2:0] radm_bypass_cpl_status_nege ; 
    reg [7:0] radm_bypass_st_nege ; 
    reg [15:0] radm_bypass_cmpltr_id_nege ; 
    reg [11:0] radm_bypass_byte_cnt_nege ; 
    reg [1:0] radm_bypass_ats_nege ; 
    reg radm_bypass_th_nege ; 
    reg [1:0] radm_bypass_ph_nege ; 
    reg radm_bypass_bcm_nege ; 
    // ====================================================================
    // Main Code
    // ====================================================================
    always
        @(negedge user_clk)
        begin
            radm_bypass_data_nege <=  radm_bypass_data_core ;
            radm_bypass_dwen_nege <=  radm_bypass_dwen_core ;
            radm_bypass_dv_nege <=  radm_bypass_dv_core ;
            radm_bypass_hv_nege <=  radm_bypass_hv_core ;
            radm_bypass_eot_nege <=  radm_bypass_eot_core ;
            radm_bypass_dllp_abort_nege <=  radm_bypass_dllp_abort_core ;
            radm_bypass_tlp_abort_nege <=  radm_bypass_tlp_abort_core ;
            radm_bypass_ecrc_err_nege <=  radm_bypass_ecrc_err_core ;
            radm_bypass_addr_nege <=  radm_bypass_addr_core ;
            radm_bypass_fmt_nege <=  radm_bypass_fmt_core ;
            radm_bypass_tc_nege <=  radm_bypass_tc_core ;
            radm_bypass_attr_nege <=  radm_bypass_attr_core ;
            radm_bypass_reqid_nege <=  radm_bypass_reqid_core ;
            radm_bypass_type_nege <=  radm_bypass_type_core ;
            radm_bypass_tag_nege <=  radm_bypass_tag_core ;
            radm_bypass_func_num_nege <=  radm_bypass_func_num_core ;
            radm_bypass_vfunc_num_nege <=  radm_bypass_vfunc_num_core ;
            radm_bypass_vfunc_active_nege <=  radm_bypass_vfunc_active_core ;
            radm_bypass_td_nege <=  radm_bypass_td_core ;
            radm_bypass_poisoned_nege <=  radm_bypass_poisoned_core ;
            radm_bypass_dw_len_nege <=  radm_bypass_dw_len_core ;
            radm_bypass_rom_in_range_nege <=  radm_bypass_rom_in_range_core ;
            radm_bypass_first_be_nege <=  radm_bypass_first_be_core ;
            radm_bypass_last_be_nege <=  radm_bypass_last_be_core ;
            radm_bypass_io_req_in_range_nege <=  radm_bypass_io_req_in_range_core ;
            radm_bypass_in_membar_range_nege <=  radm_bypass_in_membar_range_core ;
            radm_bypass_cpl_last_nege <=  radm_bypass_cpl_last_core ;
            radm_bypass_cpl_status_nege <=  radm_bypass_cpl_status_core ;
            radm_bypass_st_nege <=  radm_bypass_st_core ;
            radm_bypass_cmpltr_id_nege <=  radm_bypass_cmpltr_id_core ;
            radm_bypass_byte_cnt_nege <=  radm_bypass_byte_cnt_core ;
            radm_bypass_ats_nege <=  radm_bypass_ats_core ;
            radm_bypass_th_nege <=  radm_bypass_th_core ;
            radm_bypass_ph_nege <=  radm_bypass_ph_core ;
            radm_bypass_bcm_nege <=  radm_bypass_bcm_core ;
        end
    always
        @(posedge user_clk)
        begin
            radm_bypass_data_user <=  radm_bypass_data_nege ;
            radm_bypass_dwen_user <=  radm_bypass_dwen_nege ;
            radm_bypass_dv_user <=  radm_bypass_dv_nege ;
            radm_bypass_hv_user <=  radm_bypass_hv_nege ;
            radm_bypass_eot_user <=  radm_bypass_eot_nege ;
            radm_bypass_dllp_abort_user <=  radm_bypass_dllp_abort_nege ;
            radm_bypass_tlp_abort_user <=  radm_bypass_tlp_abort_nege ;
            radm_bypass_ecrc_err_user <=  radm_bypass_ecrc_err_nege ;
            radm_bypass_addr_user <=  radm_bypass_addr_nege ;
            radm_bypass_fmt_user <=  radm_bypass_fmt_nege ;
            radm_bypass_tc_user <=  radm_bypass_tc_nege ;
            radm_bypass_attr_user <=  radm_bypass_attr_nege ;
            radm_bypass_reqid_user <=  radm_bypass_reqid_nege ;
            radm_bypass_type_user <=  radm_bypass_type_nege ;
            radm_bypass_tag_user <=  radm_bypass_tag_nege ;
            radm_bypass_func_num_user <=  radm_bypass_func_num_nege ;
            radm_bypass_vfunc_num_user <=  radm_bypass_vfunc_num_nege ;
            radm_bypass_vfunc_active_user <=  radm_bypass_vfunc_active_nege ;
            radm_bypass_td_user <=  radm_bypass_td_nege ;
            radm_bypass_poisoned_user <=  radm_bypass_poisoned_nege ;
            radm_bypass_dw_len_user <=  radm_bypass_dw_len_nege ;
            radm_bypass_rom_in_range_user <=  radm_bypass_rom_in_range_nege ;
            radm_bypass_first_be_user <=  radm_bypass_first_be_nege ;
            radm_bypass_last_be_user <=  radm_bypass_last_be_nege ;
            radm_bypass_io_req_in_range_user <=  radm_bypass_io_req_in_range_nege ;
            radm_bypass_in_membar_range_user <=  radm_bypass_in_membar_range_nege ;
            radm_bypass_cpl_last_user <=  radm_bypass_cpl_last_nege ;
            radm_bypass_cpl_status_user <=  radm_bypass_cpl_status_nege ;
            radm_bypass_st_user <=  radm_bypass_st_nege ;
            radm_bypass_cmpltr_id_user <=  radm_bypass_cmpltr_id_nege ;
            radm_bypass_byte_cnt_user <=  radm_bypass_byte_cnt_nege ;
            radm_bypass_ats_user <=  radm_bypass_ats_nege ;
            radm_bypass_th_user <=  radm_bypass_th_nege ;
            radm_bypass_ph_user <=  radm_bypass_ph_nege ;
            radm_bypass_bcm_user <=  radm_bypass_bcm_nege ;
        end
endmodule



module elbi_pipeline (
    input wire user_clk, 
    input wire user_link_up, 
    output wire [31:0] lbc_ext_addr_user, 
    output wire [1:0] lbc_ext_cs_user, 
    output wire [3:0] lbc_ext_wr_user, 
    output wire lbc_ext_rom_access_user, 
    output wire lbc_ext_io_access_user, 
    output wire [31:0] lbc_ext_dout_user, 
    output wire [2:0] lbc_ext_bar_num_user, 
    output wire lbc_ext_vfunc_active_user, 
    output wire [1:0] lbc_ext_vfunc_num_user, 
    input wire [63:0] ext_lbc_din_user, 
    input wire [1:0] ext_lbc_ack_user, 
    input wire [31:0] lbc_ext_addr_core, 
    input wire [1:0] lbc_ext_cs_core, 
    input wire [3:0] lbc_ext_wr_core, 
    input wire lbc_ext_rom_access_core, 
    input wire lbc_ext_io_access_core, 
    input wire [31:0] lbc_ext_dout_core, 
    input wire [2:0] lbc_ext_bar_num_core, 
    input wire lbc_ext_vfunc_active_core, 
    input wire [1:0] lbc_ext_vfunc_num_core, 
    output reg [63:0] ext_lbc_din_core, 
    output reg [1:0] ext_lbc_ack_core) ;
    // ====================================================================
    // Parameter/Wire/Reg
    // ====================================================================
    reg [31:0] lbc_ext_addr_nege ; 
    reg [1:0] lbc_ext_cs_nege ; 
    reg [3:0] lbc_ext_wr_nege ; 
    reg lbc_ext_rom_access_nege ; 
    reg lbc_ext_io_access_nege ; 
    reg [31:0] lbc_ext_dout_nege ; 
    reg [2:0] lbc_ext_bar_num_nege ; 
    reg lbc_ext_vfunc_active_nege ; 
    reg [1:0] lbc_ext_vfunc_num_nege ; 
    reg [31:0] lbc_ext_addr_dly ; 
    reg [1:0] lbc_ext_cs_dly ; 
    reg [3:0] lbc_ext_wr_dly ; 
    reg lbc_ext_rom_access_dly ; 
    reg lbc_ext_io_access_dly ; 
    reg [31:0] lbc_ext_dout_dly ; 
    reg [2:0] lbc_ext_bar_num_dly ; 
    reg lbc_ext_vfunc_active_dly ; 
    reg [1:0] lbc_ext_vfunc_num_dly ; 
    reg [31:0] lbc_ext_addr_dly2 ; 
    reg [1:0] lbc_ext_cs_dly2 ; 
    reg [3:0] lbc_ext_wr_dly2 ; 
    reg lbc_ext_rom_access_dly2 ; 
    reg lbc_ext_io_access_dly2 ; 
    reg [31:0] lbc_ext_dout_dly2 ; 
    reg [2:0] lbc_ext_bar_num_dly2 ; 
    reg lbc_ext_vfunc_active_dly2 ; 
    reg [1:0] lbc_ext_vfunc_num_dly2 ; 
    wire cs0_pose_user, 
        cs1_pose_user ; 
    wire cs0_handshark_user, 
        cs1_handshark_user ; 
    reg cs0_handshark_core, 
        cs1_handshark_core ; 
    // ====================================================================
    // Main Code
    // ====================================================================
    // pipeline negedge pcie ip input signals
    always
        @(negedge user_clk)
        begin
            lbc_ext_addr_nege <=  lbc_ext_addr_core ;
            lbc_ext_cs_nege <=  lbc_ext_cs_core ;
            lbc_ext_wr_nege <=  lbc_ext_wr_core ;
            lbc_ext_rom_access_nege <=  lbc_ext_rom_access_core ;
            lbc_ext_io_access_nege <=  lbc_ext_io_access_core ;
            lbc_ext_dout_nege <=  lbc_ext_dout_core ;
            lbc_ext_bar_num_nege <=  lbc_ext_bar_num_core ;
            lbc_ext_vfunc_active_nege <=  lbc_ext_vfunc_active_core ;
            lbc_ext_vfunc_num_nege <=  lbc_ext_vfunc_num_core ;
        end
    // pipeline posedge pcie ip input signals
    always
        @(posedge user_clk)
        begin
            lbc_ext_addr_dly <=  lbc_ext_addr_nege ;
            lbc_ext_cs_dly <=  lbc_ext_cs_nege ;
            lbc_ext_wr_dly <=  lbc_ext_wr_nege ;
            lbc_ext_rom_access_dly <=  lbc_ext_rom_access_nege ;
            lbc_ext_io_access_dly <=  lbc_ext_io_access_nege ;
            lbc_ext_dout_dly <=  lbc_ext_dout_nege ;
            lbc_ext_bar_num_dly <=  lbc_ext_bar_num_nege ;
            lbc_ext_vfunc_active_dly <=  lbc_ext_vfunc_active_nege ;
            lbc_ext_vfunc_num_dly <=  lbc_ext_vfunc_num_nege ;
        end
    assign cs0_pose_user = ((lbc_ext_cs_dly[0] & (~lbc_ext_cs_dly2[0])) & (~ext_lbc_ack_core[0])) ; 
    assign cs1_pose_user = ((lbc_ext_cs_dly[1] & (~lbc_ext_cs_dly2[1])) & (~ext_lbc_ack_core[1])) ; 
    assign cs0_handshark_user = (lbc_ext_cs_dly2[0] & ext_lbc_ack_user[0]) ; 
    assign cs1_handshark_user = (lbc_ext_cs_dly2[1] & ext_lbc_ack_user[1]) ; 
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                begin
                    lbc_ext_cs_dly2 <=  2'b00 ;
                end
            else
                if ((cs0_handshark_user | cs1_handshark_user)) 
                    begin
                        lbc_ext_cs_dly2 <=  {(cs1_handshark_user ^ lbc_ext_cs_dly2[1]),
                                (cs0_handshark_user ^ lbc_ext_cs_dly2[0])} ;
                    end
                else
                    if ((cs0_pose_user | cs1_pose_user)) 
                        begin
                            lbc_ext_cs_dly2 <=  {cs1_pose_user,
                                    cs0_pose_user} ;
                        end
        end
    always
        @(posedge user_clk)
        begin
            if ((cs0_pose_user | cs1_pose_user)) 
                begin
                    lbc_ext_addr_dly2 <=  lbc_ext_addr_dly ;
                    lbc_ext_wr_dly2 <=  lbc_ext_wr_dly ;
                    lbc_ext_rom_access_dly2 <=  lbc_ext_rom_access_dly ;
                    lbc_ext_io_access_dly2 <=  lbc_ext_io_access_dly ;
                    lbc_ext_dout_dly2 <=  lbc_ext_dout_dly ;
                    lbc_ext_bar_num_dly2 <=  lbc_ext_bar_num_dly ;
                    lbc_ext_vfunc_active_dly2 <=  lbc_ext_vfunc_active_dly ;
                    lbc_ext_vfunc_num_dly2 <=  lbc_ext_vfunc_num_dly ;
                end
        end
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                begin
                    cs0_handshark_core <=  1'b0 ;
                    cs1_handshark_core <=  1'b0 ;
                end
            else
                begin
                    cs0_handshark_core <=  ((lbc_ext_cs_nege[0] & ext_lbc_ack_core[0]) ? 1'b1 : 1'b0) ;
                    cs1_handshark_core <=  ((lbc_ext_cs_nege[1] & ext_lbc_ack_core[1]) ? 1'b1 : 1'b0) ;
                end
        end
    always
        @(posedge user_clk or 
            negedge user_link_up)
        begin
            if ((!user_link_up)) 
                begin
                    ext_lbc_ack_core <=  2'b00 ;
                end
            else
                if ((cs0_handshark_core | cs1_handshark_core)) 
                    begin
                        ext_lbc_ack_core <=  2'b00 ;
                    end
                else
                    if ((cs0_handshark_user | cs1_handshark_user)) 
                        begin
                            ext_lbc_ack_core <=  {cs1_handshark_user,
                                    cs0_handshark_user} ;
                        end
        end
    always
        @(posedge user_clk)
        begin
            if ((cs0_handshark_user | cs1_handshark_user)) 
                begin
                    ext_lbc_din_core <=  ext_lbc_din_user ;
                end
        end
    assign lbc_ext_addr_user = lbc_ext_addr_dly2 ; 
    assign lbc_ext_cs_user = lbc_ext_cs_dly2 ; 
    assign lbc_ext_wr_user = lbc_ext_wr_dly2 ; 
    assign lbc_ext_rom_access_user = lbc_ext_rom_access_dly2 ; 
    assign lbc_ext_io_access_user = lbc_ext_io_access_dly2 ; 
    assign lbc_ext_dout_user = lbc_ext_dout_dly2 ; 
    assign lbc_ext_bar_num_user = lbc_ext_bar_num_dly2 ; 
    assign lbc_ext_vfunc_active_user = lbc_ext_vfunc_active_dly2 ; 
    assign lbc_ext_vfunc_num_user = lbc_ext_vfunc_num_dly2 ; 
endmodule



module dbi_pipeline (
    input wire user_clk, 
    input wire core_rst_n, 
    input wire [31:0] drp_dbi_din_user, 
    input wire [3:0] drp_dbi_wr_user, 
    input wire [31:0] drp_dbi_addr_user, 
    input wire drp_dbi_cs_user, 
    input wire drp_dbi_cs2_exp_user, 
    input wire [1:0] drp_dbi_vfunc_num_user, 
    input wire drp_dbi_vfunc_active_user, 
    input wire [2:0] drp_dbi_bar_num_user, 
    input wire drp_dbi_rom_access_user, 
    input wire drp_dbi_io_access_user, 
    input wire drp_dbi_func_num_user, 
    input wire drp_app_dbi_ro_wr_disable_user, 
    output reg [31:0] drp_lbc_dbi_dout_user, 
    output reg drp_lbc_dbi_ack_user, 
    output wire [31:0] drp_dbi_din_core, 
    output wire [3:0] drp_dbi_wr_core, 
    output wire [31:0] drp_dbi_addr_core, 
    output wire drp_dbi_cs_core, 
    output wire drp_dbi_cs2_exp_core, 
    output wire [1:0] drp_dbi_vfunc_num_core, 
    output wire drp_dbi_vfunc_active_core, 
    output wire [2:0] drp_dbi_bar_num_core, 
    output wire drp_dbi_rom_access_core, 
    output wire drp_dbi_io_access_core, 
    output wire drp_dbi_func_num_core, 
    output wire drp_app_dbi_ro_wr_disable_core, 
    input wire [31:0] drp_lbc_dbi_dout_core, 
    input wire drp_lbc_dbi_ack_core) ;
    // ====================================================================
    // Parameter/Wire/Reg
    // ====================================================================
    reg [31:0] drp_lbc_dbi_dout_nege ; 
    reg drp_lbc_dbi_ack_nege ; 
    reg [31:0] drp_dbi_din_dly ; 
    reg [3:0] drp_dbi_wr_dly ; 
    reg [31:0] drp_dbi_addr_dly ; 
    reg drp_dbi_cs_dly ; 
    reg drp_dbi_cs2_exp_dly ; 
    reg [1:0] drp_dbi_vfunc_num_dly ; 
    reg drp_dbi_vfunc_active_dly ; 
    reg [2:0] drp_dbi_bar_num_dly ; 
    reg drp_dbi_rom_access_dly ; 
    reg drp_dbi_io_access_dly ; 
    reg drp_dbi_func_num_dly ; 
    reg drp_app_dbi_ro_wr_disable_dly ; 
    reg [31:0] drp_dbi_din_dly2 ; 
    reg [3:0] drp_dbi_wr_dly2 ; 
    reg [31:0] drp_dbi_addr_dly2 ; 
    reg drp_dbi_cs_dly2 ; 
    reg drp_dbi_cs2_exp_dly2 ; 
    reg [1:0] drp_dbi_vfunc_num_dly2 ; 
    reg drp_dbi_vfunc_active_dly2 ; 
    reg [2:0] drp_dbi_bar_num_dly2 ; 
    reg drp_dbi_rom_access_dly2 ; 
    reg drp_dbi_io_access_dly2 ; 
    reg drp_dbi_func_num_dly2 ; 
    reg drp_app_dbi_ro_wr_disable_dly2 ; 
    wire dbi_cs_pose_user ; 
    wire dbi_handshark_core ; 
    reg dbi_handshark_user ; 
    // ====================================================================
    // Main Code
    // ====================================================================
    // pipeline negedge pcie ip input signals
    always
        @(negedge user_clk)
        begin
            drp_lbc_dbi_dout_nege <=  drp_lbc_dbi_dout_core ;
            drp_lbc_dbi_ack_nege <=  drp_lbc_dbi_ack_core ;
        end
    // pipeline posedge user input signals
    always
        @(posedge user_clk)
        begin
            drp_dbi_cs_dly <=  drp_dbi_cs_user ;
            drp_dbi_din_dly <=  drp_dbi_din_user ;
            drp_dbi_wr_dly <=  drp_dbi_wr_user ;
            drp_dbi_addr_dly <=  drp_dbi_addr_user ;
            drp_dbi_cs2_exp_dly <=  drp_dbi_cs2_exp_user ;
            drp_dbi_vfunc_num_dly <=  drp_dbi_vfunc_num_user ;
            drp_dbi_vfunc_active_dly <=  drp_dbi_vfunc_active_user ;
            drp_dbi_bar_num_dly <=  drp_dbi_bar_num_user ;
            drp_dbi_rom_access_dly <=  drp_dbi_rom_access_user ;
            drp_dbi_io_access_dly <=  drp_dbi_io_access_user ;
            drp_dbi_func_num_dly <=  drp_dbi_func_num_user ;
            drp_app_dbi_ro_wr_disable_dly <=  drp_app_dbi_ro_wr_disable_user ;
        end
    assign dbi_cs_pose_user = ((drp_dbi_cs_dly & (~drp_dbi_cs_dly2)) & (~drp_lbc_dbi_ack_user)) ; 
    assign dbi_handshark_core = (drp_dbi_cs_core & drp_lbc_dbi_ack_nege) ; 
    always
        @(posedge user_clk or 
            negedge core_rst_n)
        begin
            if ((!core_rst_n)) 
                dbi_handshark_user <=  1'b0 ;
            else
                if ((drp_dbi_cs_user & drp_lbc_dbi_ack_user)) 
                    dbi_handshark_user <=  1'b1 ;
                else
                    dbi_handshark_user <=  1'b0 ;
        end
    always
        @(posedge user_clk or 
            negedge core_rst_n)
        begin
            if ((!core_rst_n)) 
                begin
                    drp_dbi_cs_dly2 <=  1'b0 ;
                    drp_dbi_cs2_exp_dly2 <=  1'b0 ;
                    drp_dbi_wr_dly2 <=  4'd0 ;
                    drp_app_dbi_ro_wr_disable_dly2 <=  1'b0 ;
                end
            else
                if (dbi_handshark_core) 
                    begin
                        drp_dbi_cs_dly2 <=  1'b0 ;
                        drp_dbi_cs2_exp_dly2 <=  1'b0 ;
                        drp_dbi_wr_dly2 <=  4'd0 ;
                        drp_app_dbi_ro_wr_disable_dly2 <=  1'b0 ;
                    end
                else
                    if (dbi_cs_pose_user) 
                        begin
                            drp_dbi_cs_dly2 <=  1'b1 ;
                            drp_dbi_cs2_exp_dly2 <=  drp_dbi_cs2_exp_dly ;
                            drp_dbi_wr_dly2 <=  drp_dbi_wr_dly ;
                            drp_app_dbi_ro_wr_disable_dly2 <=  drp_app_dbi_ro_wr_disable_dly ;
                        end
        end
    always
        @(posedge user_clk)
        begin
            if (dbi_cs_pose_user) 
                begin
                    drp_dbi_addr_dly2 <=  drp_dbi_addr_dly ;
                    drp_dbi_din_dly2 <=  drp_dbi_din_dly ;
                    drp_dbi_vfunc_num_dly2 <=  drp_dbi_vfunc_num_dly ;
                    drp_dbi_vfunc_active_dly2 <=  drp_dbi_vfunc_active_dly ;
                    drp_dbi_bar_num_dly2 <=  drp_dbi_bar_num_dly ;
                    drp_dbi_rom_access_dly2 <=  drp_dbi_rom_access_dly ;
                    drp_dbi_io_access_dly2 <=  drp_dbi_io_access_dly ;
                    drp_dbi_func_num_dly2 <=  drp_dbi_func_num_dly ;
                end
        end
    always
        @(posedge user_clk or 
            negedge core_rst_n)
        begin
            if ((!core_rst_n)) 
                drp_lbc_dbi_ack_user <=  1'b0 ;
            else
                if (dbi_handshark_user) 
                    drp_lbc_dbi_ack_user <=  1'b0 ;
                else
                    if (dbi_handshark_core) 
                        drp_lbc_dbi_ack_user <=  1'b1 ;
        end
    always
        @(posedge user_clk)
        begin
            drp_lbc_dbi_dout_user <=  drp_lbc_dbi_dout_nege ;
        end
    assign drp_dbi_din_core = drp_dbi_din_dly2 ; 
    assign drp_dbi_wr_core = drp_dbi_wr_dly2 ; 
    assign drp_dbi_addr_core = drp_dbi_addr_dly2 ; 
    assign drp_dbi_cs_core = drp_dbi_cs_dly2 ; 
    assign drp_dbi_cs2_exp_core = drp_dbi_cs2_exp_dly2 ; 
    assign drp_dbi_vfunc_num_core = drp_dbi_vfunc_num_dly2 ; 
    assign drp_dbi_vfunc_active_core = drp_dbi_vfunc_active_dly2 ; 
    assign drp_dbi_bar_num_core = drp_dbi_bar_num_dly2 ; 
    assign drp_dbi_rom_access_core = drp_dbi_rom_access_dly2 ; 
    assign drp_dbi_io_access_core = drp_dbi_io_access_dly2 ; 
    assign drp_dbi_func_num_core = drp_dbi_func_num_dly2 ; 
    assign drp_app_dbi_ro_wr_disable_core = drp_app_dbi_ro_wr_disable_dly2 ; 
endmodule


